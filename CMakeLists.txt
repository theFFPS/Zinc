cmake_minimum_required(VERSION 3.10)
project(Zinc)

set(CMAKE_CXX_STANDARD 20)
set(CMAKE_CXX_STANDARD_REQUIRED ON)

file(GLOB_RECURSE SOURCES "src/*.cpp")
list(FILTER SOURCES EXCLUDE REGEX ".*_test\\.cc$")
include_directories(inc)

if(TARGET CURL::libcurl)
    message(STATUS "Using Conan-provided CURL target")
else()
    find_package(CURL REQUIRED)
endif()

if(TARGET zlib-ng::zlib-ng)
    message(STATUS "Using Conan-provided zlib-ng target")
else()
    find_package(zlib-ng REQUIRED)
endif()

if(TARGET OpenSSL::SSL)
    message(STATUS "Using Conan-provided OpenSSL target")
else()
    find_package(OpenSSL REQUIRED)
endif()

if(TARGET GTest::gtest)
    message(STATUS "Using Conan-provided GTest target")
else()
    find_package(GTest REQUIRED)
endif()

if(TARGET libevent::libevent)
    message(STATUS "Using Conan-provided Libevent target")
else()
    find_package(Libevent REQUIRED)
endif()

add_library(zinc_static STATIC ${SOURCES})
add_executable(zinc src/main.cc)
target_link_libraries(zinc PRIVATE zinc_static)

add_executable(test_NBT test/test_NBT.cpp)
target_link_libraries(test_NBT PRIVATE zinc_static GTest::gtest)

add_executable(test_ByteBuffer test/test_ByteBuffer.cpp)
target_link_libraries(test_ByteBuffer PRIVATE zinc_static GTest::gtest)

add_executable(test_Base64 test/test_Base64.cpp)
target_link_libraries(test_Base64 PRIVATE zinc_static GTest::gtest)

add_executable(test_RSA test/test_RSA.cpp)
target_link_libraries(test_RSA PRIVATE zinc_static GTest::gtest)

if(TARGET libevent::libevent)
    if(TARGET zlib-ng::zlib-ng)
        target_link_libraries(zinc_static PRIVATE CURL::libcurl OpenSSL::SSL OpenSSL::Crypto libevent::libevent zlib-ng::zlib-ng)
    else()
        target_link_libraries(zinc_static PRIVATE CURL::libcurl OpenSSL::SSL OpenSSL::Crypto libevent::libevent zlib-ng)
    endif()
else()
    if(TARGET zlib-ng::zlib-ng)
        target_link_libraries(zinc_static PRIVATE CURL::libcurl OpenSSL::SSL OpenSSL::Crypto event_core event_extra zlib-ng::zlib-ng)
    else()
        target_link_libraries(zinc_static PRIVATE CURL::libcurl OpenSSL::SSL OpenSSL::Crypto event_core event_extra zlib-ng)
    endif()
endif()
if(TARGET libevent::libevent)
    if(TARGET zlib-ng::zlib-ng)
        target_link_libraries(zinc PRIVATE libevent::libevent zlib-ng::zlib-ng)
    else()
        target_link_libraries(zinc PRIVATE libevent::libevent zlib-ng)
    endif()
else()
    if(TARGET zlib-ng::zlib-ng)
        target_link_libraries(zinc PRIVATE event_core event_extra zlib-ng::zlib-ng)
    else()
        target_link_libraries(zinc PRIVATE event_core event_extra zlib-ng)
    endif()
endif()

target_compile_options(zinc PRIVATE -Wall -Wextra -Wpedantic -O5 -march=native)

enable_testing()
