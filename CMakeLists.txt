cmake_minimum_required(VERSION 3.10)
project(Zinc)

set(CMAKE_CXX_STANDARD 20)
set(CMAKE_CXX_STANDARD_REQUIRED ON)

file(GLOB_RECURSE SOURCES "src/*.cpp")
list(FILTER SOURCES EXCLUDE REGEX ".*_test\\.cc$")
include_directories(inc)

if(TARGET CURL::libcurl)
    message(STATUS "Using Conan-provided CURL target")
else()
    find_package(CURL REQUIRED)
endif()

if(TARGET OpenSSL::SSL)
    message(STATUS "Using Conan-provided OpenSSL target")
else()
    find_package(OpenSSL REQUIRED)
endif()

if(TARGET GTest::gtest)
    message(STATUS "Using Conan-provided GTest target")
else()
    find_package(GTest REQUIRED)
endif()

if(TARGET libevent::libevent)
    message(STATUS "Using Conan-provided Libevent target")
else()
    find_package(Libevent REQUIRED)
endif()

add_executable(zinc src/main.cc ${SOURCES})
if(TARGET libevent::libevent)
    target_link_libraries(zinc PRIVATE CURL::libcurl OpenSSL::SSL OpenSSL::Crypto libevent::libevent)
else()
    target_link_libraries(zinc PRIVATE CURL::libcurl OpenSSL::SSL OpenSSL::Crypto event_core event_extra)
endif()
if(CMAKE_CXX_COMPILER_ID MATCHES "GNU|Clang")
    target_compile_options(zinc PRIVATE -Wall -Wextra -Wpedantic)
endif()

add_executable(ByteBuffer_test src/type/ByteBuffer_test.cc ${SOURCES})
if(TARGET libevent::libevent)
    target_link_libraries(ByteBuffer_test GTest::gtest GTest::gtest_main libevent::libevent)
else()
    target_link_libraries(ByteBuffer_test GTest::gtest GTest::gtest_main event_core event_extra)
endif()

add_executable(BitSet_test src/type/BitSet_test.cc ${SOURCES})
if(TARGET libevent::libevent)
    target_link_libraries(BitSet_test GTest::gtest GTest::gtest_main libevent::libevent)
else()
    target_link_libraries(BitSet_test GTest::gtest GTest::gtest_main event_core event_extra)
endif()

enable_testing()
add_test(NAME ByteBuffer_test COMMAND ByteBuffer_test)
add_test(NAME BitSet_test COMMAND BitSet_test)
